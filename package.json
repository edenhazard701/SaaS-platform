{
  "name": "saas-boilerplate",
  "version": "1.2.0",
  "license": "MIT",
  "description": "Build your own SaaS business with SaaS boilerplate. Productive stack: React, Material-UI, Next, MobX, WebSockets, Express, Node, Mongoose, MongoDB. Written with TypeScript.",
  "scripts": {
    "dev": "yarn --cwd ./api dev & yarn --cwd ./app dev",
    "test": "yarn --cwd ./api test && yarn --cwd ./app test",
    "postinstall": "yarn --cwd ./api install && yarn --cwd ./app install",
    "build": "yarn build:api && yarn build:app",
    "build:api": "yarn --cwd ./api build",
    "build:app": "yarn --cwd ./app build",
    "stage": "docker-compose -f docker-compose.yml build --force-rm",
    "stage:start": "docker-compose -f docker-compose.yml up",
    "stage:stop": "docker-compose -f docker-compose.yml down",
    "stage:clean": "docker-compose -f docker-compose.yml rm",
    "stage:api": "docker-compose -f docker-compose.yml run --service-ports --use-aliases --rm saas-api",
    "stage:app": "docker-compose -f docker-compose.yml run --service-ports --use-aliases --rm saas-app",
    "stage:db": "docker-compose -f docker-compose.yml run --service-ports --use-aliases --rm saas-mongo",
    "clean:prune": "yarn stage:clean & docker rmi $(docker images -f reference=saas-*:* -q) & yarn clean:dangling & yarn clean:volumes",
    "clean:dangling": "docker rmi $(docker images -f dangling=true -q)",
    "clean:volumes": "docker volume ls -qf dangling=true | xargs -r docker volume rm",
    "sh:api": "docker-compose exec saas-api sh",
    "sh:app": "docker-compose exec saas-app sh"
  },
  "keywords": [
    "react",
    "typescript",
    "node",
    "mongo",
    "saas",
    "material-ui",
    "next",
    "mobx",
    "websockets",
    "express",
    "docker"
  ]
}
